name: "build"

on: pull_request

jobs:
  publish-tauri:
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: yarn install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: release-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "Outliner v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload linux assets
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'ubuntu-22.04'
        with:
          name: pr-${{github.event.pull_request.number }}-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/rpm/*.rpm
            src-tauri/target/release/bundle/appimage/*.AppImage

      - name: Upload windows assets
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: pr-${{github.event.pull_request.number }}-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe

      - name: Upload macos assets
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'macos-latest'
        with:
          name: pr-${{github.event.pull_request.number }}-${{ matrix.platform }}
          path: |
            src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.app

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: auto-build-comment-${{ matrix.platform }}
          message: |
            Build for ${{ matrix.platform }} is done.
            Uploaded Assets:
            ${{ steps.tauri.outputs.artifactPaths }}
